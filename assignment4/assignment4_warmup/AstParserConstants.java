/* Generated By:JavaCC: Do not edit this line. AstParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AstParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int kwArrayElm = 6;
  /** RegularExpression Id. */
  int kwArrayType = 7;
  /** RegularExpression Id. */
  int kwAssign = 8;
  /** RegularExpression Id. */
  int kwBinop = 9;
  /** RegularExpression Id. */
  int kwBoolType = 10;
  /** RegularExpression Id. */
  int kwCall = 11;
  /** RegularExpression Id. */
  int kwCallStmt = 12;
  /** RegularExpression Id. */
  int kwClassDecl = 13;
  /** RegularExpression Id. */
  int kwElse = 14;
  /** RegularExpression Id. */
  int kwFalse = 15;
  /** RegularExpression Id. */
  int kwField = 16;
  /** RegularExpression Id. */
  int kwFormal = 17;
  /** RegularExpression Id. */
  int kwId = 18;
  /** RegularExpression Id. */
  int kwIf = 19;
  /** RegularExpression Id. */
  int kwIntType = 20;
  /** RegularExpression Id. */
  int kwIntVal = 21;
  /** RegularExpression Id. */
  int kwMethodDecl = 22;
  /** RegularExpression Id. */
  int kwNewArray = 23;
  /** RegularExpression Id. */
  int kwNewObj = 24;
  /** RegularExpression Id. */
  int kwObjType = 25;
  /** RegularExpression Id. */
  int kwPrint = 26;
  /** RegularExpression Id. */
  int kwProgram = 27;
  /** RegularExpression Id. */
  int kwReturn = 28;
  /** RegularExpression Id. */
  int kwStrVal = 29;
  /** RegularExpression Id. */
  int kwThis = 30;
  /** RegularExpression Id. */
  int kwTrue = 31;
  /** RegularExpression Id. */
  int kwUnop = 32;
  /** RegularExpression Id. */
  int kwVarDecl = 33;
  /** RegularExpression Id. */
  int kwVoid = 34;
  /** RegularExpression Id. */
  int kwWhile = 35;
  /** RegularExpression Id. */
  int Digit = 36;
  /** RegularExpression Id. */
  int Letter = 37;
  /** RegularExpression Id. */
  int INTVAL = 38;
  /** RegularExpression Id. */
  int STRVAL = 39;
  /** RegularExpression Id. */
  int ID = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"ArrayElm\"",
    "\"ArrayType\"",
    "\"Assign\"",
    "\"Binop\"",
    "\"BoolType\"",
    "\"Call\"",
    "\"CallStmt\"",
    "\"ClassDecl\"",
    "\"Else\"",
    "\"False\"",
    "\"Field\"",
    "\"Formal\"",
    "\"Id\"",
    "\"If\"",
    "\"IntType\"",
    "\"IntVal\"",
    "\"MethodDecl\"",
    "\"NewArray\"",
    "\"NewObj\"",
    "\"ObjType\"",
    "\"Print\"",
    "\"Program\"",
    "\"Return\"",
    "\"StrVal\"",
    "\"This\"",
    "\"True\"",
    "\"Unop\"",
    "\"VarDecl\"",
    "\"Void\"",
    "\"While\"",
    "<Digit>",
    "<Letter>",
    "<INTVAL>",
    "<STRVAL>",
    "<ID>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&&\"",
    "\"||\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"??\"",
    "\"!\"",
    "\"?\"",
  };

}
